name: Deploy CDK Application

on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled, closed]

jobs:
  deploy:
    if: contains(github.event.pull_request.labels.*.name, 'DEPLOY') && github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Check TELEGRAM_CHAT_ID secret
        id: check-telegram-secret
        run: |
          USER_LOGIN_UPPERCASE=$(echo "${{ github.event.pull_request.user.login }}" | tr '[:lower:]' '[:upper:]')
          if [ -z "${{ secrets['TELEGRAM_CHAT_ID_' + USER_LOGIN_UPPERCASE] }}" ]; then
            echo "TELEGRAM_CHAT_ID secret does not exist for user: $USER_LOGIN_UPPERCASE"
            exit 1
          else
            echo "TELEGRAM_CHAT_ID=${{ secrets['TELEGRAM_CHAT_ID_' + USER_LOGIN_UPPERCASE] }}" >> $GITHUB_ENV
          fi

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Use the appropriate Node.js version for your CDK app

      # - name: Install Dependencies (canvas)
      #   run: |
      #     sudo apt update
      #     sudo apt install -y libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev librsvg2-dev

      - name: Install dependencies (CDK)
        run: npm install -g yarn && yarn
        working-directory: deploy/

      - name: Install dependencies (App)
        run: yarn

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Bootstrap CDK
        if: success()
        run: cdk bootstrap || echo "CDK bootstrap already done or failed"
        working-directory: deploy/

      - name: Deploy CDK Stack
        if: success()
        env:
          ALCHEMY_WEBHOOK_SIGNING_KEY: ${{ secrets.ALCHEMY_WEBHOOK_SIGNING_KEY }}
          BASE_RPCS_JSON: ${{ secrets.BASE_RPCS_JSON }}
          MAINNET_RPCS_JSON: ${{ secrets.MAINNET_RPCS_JSON }}
          SEPOLIA_RPCS_JSON: ${{ secrets.SEPOLIA_RPCS_JSON }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ env.TELEGRAM_CHAT_ID }}
        run: cdk deploy --require-approval never -c stackName=society-bot-PR-${{ github.event.pull_request.number }}
        working-directory: deploy/

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Use the appropriate Node.js version for your CDK app

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Destroy CDK Stack
        run: cdk destroy --force -c stackName=society-bot-PR-${{ github.event.pull_request.number }}
        working-directory: deploy/
